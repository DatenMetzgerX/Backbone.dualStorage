// Generated by CoffeeScript 1.3.3
(function() {
  var localStorageMock, window,
    __slice = [].slice;

  localStorageMock = function() {
    var localStorage;
    localStorage = {
      values: {}
    };
    localStorage.setItem = function(key, val) {
      return this.values[key] = "" + val;
    };
    localStorage.getItem = function(key) {
      return this.values[key];
    };
    localStorage.removeItem = function(key) {
      return delete this.values[key];
    };
    localStorage.clear = function() {
      return this.values = {};
    };
    Object.defineProperty(localStorage.values, "length", {
      get: function() {
        return Object.keys(this).length;
      }
    });
    return localStorage;
  };

  window = {
    Backbone: require('backbone'),
    localStorage: localStorageMock(),
    console: {
      log: function() {
        var args;
        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      }
    },
    _: require('underscore'),
    jasmine: jasmine
  };

  window.Backbone.sync = jasmine.createSpy('sync').andCallFake(function(method, model, options) {
    return options.success(model);
  });

  window.window = window;

  exports.window = window;

}).call(this);
